unit UDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, FireDAC.Phys.FB, FireDAC.Phys.FBDef,
  Vcl.StdCtrls;

type
  TDM = class(TDataModule)
    fdcConexao: TFDConnection;
    fdtTransacao: TFDTransaction;
    sqlCliente: TFDQuery;
    dsCliente: TDataSource;
    fdtTransacaoAltera: TFDTransaction;
    sqlAltera: TFDQuery;
    sqlServico: TFDQuery;
    dsServico: TDataSource;
  private

    { Private declarations }
  public
    procedure executaSql(comando : string; q :TFDQuery);
    function LimpaEdit(Edt: TCustomEdit; K : char; C :char='#'; sinal: char='+'): char;
    function limpaVir(num : string):string;
    function salvaChave(chave :string):string;
    { Public declarations }
  end;

var
  DM: TDM;
  STbCliente :string= 'select * from tbcliente ';
  STbServico :string= 'select * from tbservico ';
implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TDM }

procedure TDM.executaSql(comando : string; q :TFDQuery);
begin
  comando := trim(comando);
  with q do
  begin
    close;
    sql.clear;
    sql.Add(comando);
    if UpperCase(Copy(comando,1,6)) = 'SELECT' then
      open
    else
      execsql;
  end;

end;

function TDM.limpaVir(num: string): string;
var
  i: integer;
begin
  num := trim(num);
  if num='' then
    num:='0';

  for I := 1 to Length(num) do
    if num[i]=',' then
      num[i]:='.';

  limpaVir := num;
end;

function TDM.salvaChave(chave: string): string;
begin
  chave:=Trim(chave);
  if chave='' then
    chave:='NULL';
  salvaChave:=chave;
end;

function TDM.LimpaEdit(Edt: TCustomEdit; K, C, sinal: char): char;
var
  B, I: integer;
begin
  if sinal='-' then
  begin
    if not(K in['0'..'9', #8,sinal, C, #13]) then
    begin
      LimpaEdit := #0;
      Exit;
    end
  end
  else
    if not(K in['0'..'9', #8, C, #13]) then
    begin
      LimpaEdit := #0;
      Exit;
    end;

  B:= 0;
  for I:= 1 to Length(Edt.Text) do
    if Edt.Text[I] = c then
      B:= B + 1;

  if (B > 0) then
    if ((K in['0'..'9', #8])) then
      LimpaEdit:= K
    else
    begin
      k:=#0;
      LimpaEdit:= (#0) ;
    end;

  if (sinal='-') and (Edt.Text<>'') and (k='-') then
    LimpaEdit:= (#0)
  else
    LimpaEdit:= K;
end;

end.

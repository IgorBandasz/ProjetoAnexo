unit ULocOS;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Mask, Vcl.DBCtrls,
  Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.Buttons, Vcl.ExtCtrls;

type
  TFLocOS = class(TForm)
    pBotoes: TPanel;
    btNovo: TBitBtn;
    btAlterar: TBitBtn;
    btRemover: TBitBtn;
    btSalvar: TBitBtn;
    btCancelar: TBitBtn;
    btSair: TBitBtn;
    dbgServicos: TDBGrid;
    pListagem: TPanel;
    cbPesquisa: TComboBox;
    edtPesquisa: TEdit;
    btPesquisar: TBitBtn;
    pDados: TPanel;
    lbCodigo: TLabel;
    lbData: TLabel;
    edtPkCodOS: TEdit;
    medtDataOs: TMaskEdit;
    lbPlaca: TLabel;
    medtPlacaVeiculo: TMaskEdit;
    edtValorTotal: TEdit;
    lbValor: TLabel;
    lbCliente: TLabel;
    edtFkCodCli: TEdit;
    btProcuraCliente: TBitBtn;
    lbNomeCliente: TLabel;
    dbedtPkCodOS: TDBEdit;
    procedure mostra;
    procedure limpa;
    procedure controleBotoes(acao :integer);
    procedure btNovoClick(Sender: TObject);
    procedure btAlterarClick(Sender: TObject);
    procedure btRemoverClick(Sender: TObject);
    procedure btSalvarClick(Sender: TObject);
  private
    procedure controleNotoes(acao: integer);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FLocOS: TFLocOS;

implementation

{$R *.dfm}

uses UDM;

{ TFLocOS }

procedure TFLocOS.btAlterarClick(Sender: TObject);
begin
  btPesquisar.Enabled := false;
  acaoGeral := 1;
  controleBotoes(acaoGeral);
end;

procedure TFLocOS.btNovoClick(Sender: TObject);
begin
  btPesquisar.Enabled := false;
  acaoGeral := 0;
  controleBotoes(acaoGeral);
end;

procedure TFLocOS.btRemoverClick(Sender: TObject);
var
  comando : string;
begin
  try
    if DM.fdtTransacaoAltera.TransactionIntf.Active then
      DM.fdtTransacaoAltera.Rollback;
    DM.fdtTransacaoAltera.StartTransaction;

    comando:='DELETE FROM TBOS'
       +' WHERE PKCODOS = '+edtPkCodOS.Text;

    DM.executaSql(comando,dm.sqlAltera);
    DM.fdtTransacaoAltera.Commit;
    btPesquisarClick(nil);
    acaoGeral := 3;
    controleBotoes(acaoGeral);
  except
    DM.fdtTransacaoAltera.Rollback;
    showmessage('erro ao apagar dados');
  end;

end;

procedure TFLocOS.btSalvarClick(Sender: TObject);
var
  comando : string;
begin
  btPesquisar.Enabled := true;
  try
    if DM.fdtTransacaoAltera.TransactionIntf.Active then
      DM.fdtTransacaoAltera.Rollback;
    DM.fdtTransacaoAltera.StartTransaction;

    case acaoGeral of
      0: begin
        Dm.executaSql(STbCliente,DM.sqlCliente);
        if DM.sqlCliente.FieldByName('pkcodcli').AsString = '' then
        begin
          showmessage('Você precisa cadastrar um Cliente na área de cadastramento de Cliente');
        end;
        comando:=' INSERT INTO TBOS (DATAOS, FKCODVEICULO, FKCODCLI, VALORTOTAL)'+
        'VALUES ('+QuotedStr(medtDataOS.Text)
                  +','+DM.salvaChave()+')';
      end;
      1: begin
        comando:='UPDATE TBVEICULO'
           +' SET PLACAVEICULO = '+QuotedStr(medtPlacaVeiculo.Text)
           +', FKCODMARCA ='+DM.salvaChave(cbFkCodMarca.Text)
           +' WHERE PKCODVEICULO = '+edtPkCodVeiculo.Text;
      end;
    end;

    DM.executaSql(comando,DM.sqlAltera);
    DM.fdtTransacaoAltera.Commit;
    btPesquisarClick(nil);
    acaoGeral := 3;
    controleBotoes(acaoGeral);
  except
    DM.fdtTransacaoAltera.Rollback;
    showmessage('erro ao salvar dados');
  end;


end;

procedure TFLocOS.controleBotoes(acao: integer);
begin
  BtNovo.Enabled := false;
  BtAlterar.Enabled := false;
  BtRemover.Enabled := false;
  BtSalvar.Enabled := false;
  BtCancelar.Enabled := false;
  case acao of
    0: begin
      limpa;
      BtSalvar.Enabled := true;
      BtCancelar.Enabled := true;
      if edtFkCodCLi.CanFocus then
        edtFkCodCli.SetFocus;
    end;
    1: begin
      BtSalvar.Enabled := true;
      BtCancelar.Enabled := true;
      if edtFkCodCli.CanFocus then
        edtFkCodCli.SetFocus;
    end;
    else begin
       BtNovo.Enabled := true;
       if DM.sqlOS.FieldByName('pkcodos').AsString <> '' then
       begin
          BtAlterar.Enabled := true;
          BtRemover.Enabled := true;
       end;
    end;
  end;
end;

procedure TFLocOS.controleNotoes(acao: integer);
begin

end;

procedure TFLocOS.limpa;
var
  i: integer;
begin
  for i := 0 to ComponentCount-1 do
  begin
    if Components[i] is TEdit then TEdit(Components[i]).Text := '';
    if Components[i] is TMaskEdit then TMaskEdit(Components[i]).Text := ''
  end;
end;

procedure TFLocOS.mostra;
begin
  if(DM.sqlOS.Active = false) or (DM.sqlOS.FieldByName('pkcodos').AsString = '') then
  begin
    limpa;
    exit;
  end;
  edtPkCodOS.Text := DM.sqlOS.FieldByName('pkcodveiculo').AsString;
  medtPlacaVeiculo.Text := DM.sqlOS.FieldByName('placaveiculo').AsString;
  edtFkCodCli.Text := DM.sqlOS.FieldByName('fkcodcli').AsString;
  lbNomeCliente.Caption := DM.sqlOS.FieldByName('nomecli').AsString;
  medtDataOS.Text := FormatDateTime('dd/mm/yyyy', DM.sqlOS.FieldByName('dataos').AsString);
  edtValorTotal.Text := DM.sqlOS.FieldByName('valortotal').AsString;
end;

end.

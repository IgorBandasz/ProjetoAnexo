unit UDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, FireDAC.Phys.FB, FireDAC.Phys.FBDef;

type
  TDM = class(TDataModule)
    fdcConexao: TFDConnection;
    fdtTransacao: TFDTransaction;
    sqlCliente: TFDQuery;
    dsCliente: TDataSource;
  private
    procedure executaSql(comando : string; q :TFDQuery);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;
  STbCliente :string= 'select * from tbcliente ';
implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TDM }

procedure TDM.executaSql(comando : string; q :TFDQuery);
begin
  comando := trim(comando);
  with q do
  begin
    close;
    sql.clear;
    sql.Add(comando);
    if UpperCase(Copy(comando,1,6)) = 'SELECT' then
      open
    else
      execsql;
  end;

end;

end.
